Autogen Definitions fsm;

method = case;
type   = reentrant;

prefix = smtp_server;

cookie = "void* client";
cookie = "const char* matchdata";

state  = ready, hello, mail, rcpt, data, closed;
event  = cmnd_noop, cmnd_helo, cmnd_ehlo, cmnd_mail, cmnd_rcpt, cmnd_vrfy, cmnd_data, cmnd_rset,
    cmnd_quit, mail_end, mail_data, conn_accepted, conn_lost;

transition =
{ tst  = '*';               tev = conn_accepted;        next = ready;               ttype = accepted; };

transition =
{ tst  = ready;             tev = cmnd_noop;            next = ready;               ttype = cmnd_noop; },
{ tst  = ready;             tev = cmnd_helo;            next = hello;               ttype = cmnd_helo; },
{ tst  = ready;             tev = cmnd_ehlo;            next = hello;               ttype = cmnd_ehlo; },
{ tst  = ready;             tev = cmnd_quit;            next = closed;              ttype = cmnd_close; },
{ tst  = ready;             tev = conn_lost;            next = closed;              ttype = cmnd_close; },
{ tst  = ready;             tev = cmnd_vrfy;            next = ready;               ttype = cmnd_vrfy; };


transition =
{ tst  = hello;       tev = cmnd_noop;            next = hello;         ttype = cmnd_noop; },
{ tst  = hello;       tev = cmnd_mail;            next = mail;          ttype = cmnd_mail; },
{ tst  = hello;       tev = cmnd_rset;            next = hello;         ttype = cmnd_rset; },
{ tst  = hello;       tev = cmnd_quit;            next = closed;        ttype = cmnd_close; },
{ tst  = hello;       tev = conn_lost;            next = closed;        ttype = cmnd_close; },
{ tst  = hello;       tev = cmnd_vrfy;            next = hello;         ttype = cmnd_vrfy; };

transition =
{ tst  = mail;    tev = cmnd_noop;            next = mail;           ttype = cmnd_noop; },
{ tst  = mail;    tev = cmnd_rcpt;            next = rcpt;           ttype = cmnd_rcpt; },
{ tst  = mail;    tev = cmnd_rset;            next = hello;          ttype = cmnd_rset; },
{ tst  = mail;    tev = cmnd_quit;            next = closed;         ttype = cmnd_close; },
{ tst  = mail;    tev = conn_lost;            next = closed;         ttype = cmnd_close; },
{ tst  = mail;    tev = cmnd_vrfy;            next = mail;           ttype = cmnd_vrfy; };

transition =
{ tst  = rcpt;         tev = cmnd_noop;            next = rcpt;           ttype = cmnd_noop; },
{ tst  = rcpt;         tev = cmnd_rcpt;            next = rcpt;           ttype = cmnd_rcpt; },
{ tst  = rcpt;         tev = cmnd_data;            next = data;           ttype = cmnd_data; },
{ tst  = rcpt;         tev = cmnd_rset;            next = hello;          ttype = cmnd_rset; },
{ tst  = rcpt;         tev = cmnd_quit;            next = closed;         ttype = cmnd_close; },
{ tst  = rcpt;         tev = conn_lost;            next = closed;         ttype = cmnd_close; },
{ tst  = rcpt;         tev = cmnd_vrfy;            next = rcpt;           ttype = cmnd_vrfy; };

transition =
{ tst  = data;  tev = mail_data;            next = data;       ttype = mail_data; },
{ tst  = data;  tev = mail_end;             next = hello;      ttype = mail_end; },
{ tst  = data;  tev = conn_lost;            next = closed;     ttype = cmnd_close; };